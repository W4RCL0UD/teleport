{{- $persistence := (coalesce .Values.standalone .Values.persistence) -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-auth
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "teleport-cluster.auth.labels" . | nindent 4 }}
    app: {{ .Release.Name }}
{{- if .Values.annotations.deployment }}
  annotations: {{- toYaml .Values.annotations.deployment | nindent 4 }}
{{- end }}
spec:
{{- if not (eq .Values.chartMode "standalone") }}
  replicas: {{ .Values.highAvailability.replicaCount }}
  minReadySeconds: {{ .Values.highAvailability.minReadySeconds }}
  {{- else }}
  replicas: 1
  {{- end }}
  serviceName: {{ .Release.Name }}-auth
  selector:
    matchLabels: {{- include "teleport-cluster.auth.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        # ConfigMap checksum, to recreate the pod on config changes.
        checksum/config: {{ include (print $.Template.BasePath "/auth/config.yaml") . | sha256sum }}
{{- if .Values.annotations.pod }}
  {{- toYaml .Values.annotations.pod | nindent 8 }}
{{- end }}
      labels:
        {{- include "teleport-cluster.auth.labels" . | nindent 8 }}
        app: {{ .Release.Name }}
    spec:
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 6 }}
      {{- end }}
{{- if .Values.initContainers }}
      initContainers: {{- toYaml .Values.initContainers | nindent 6 }}
  {{- if .Values.resources }}
        resources:
    {{- toYaml .Values.resources | nindent 10 }}
  {{- end }}
        volumeMounts:
  {{- if .Values.enterprise }}
        - mountPath: /var/lib/license
          name: "license"
          readOnly: true
  {{- end }}
  {{- if and (.Values.gcp.credentialSecretName) (eq .Values.chartMode "gcp") }}
        - mountPath: /etc/teleport-secrets
          name: "gcp-credentials"
          readOnly: true
  {{- end }}
        - mountPath: /etc/teleport
          name: "config"
          readOnly: true
        - mountPath: /var/lib/teleport
          name: "data"
  {{- if .Values.extraVolumeMounts }}
    {{- toYaml .Values.extraVolumeMounts | nindent 8 }}
  {{- end }}
{{- end }}
      containers:
      - name: "teleport"
        image: '{{ if .Values.enterprise }}{{ .Values.enterpriseImage }}{{ else }}{{ .Values.image }}{{ end }}:{{ include "teleport-cluster.version" . }}'
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        {{- if or .Values.extraEnv .Values.tls.existingCASecretName }}
        env:
        {{- if (gt (len .Values.extraEnv) 0) }}
          {{- toYaml .Values.extraEnv | nindent 8 }}
        {{- end }}
        {{- if .Values.tls.existingCASecretName }}
        - name: SSL_CERT_FILE
          value: /etc/teleport-tls-ca/ca.pem
        {{- end }}
        {{- end }}
        args:
        - "--diag-addr=0.0.0.0:3000"
        {{- if .Values.insecureSkipProxyTLSVerify }}
        - "--insecure"
        {{- end }}
        {{- if .Values.extraArgs }}
          {{- toYaml .Values.extraArgs | nindent 8 }}
        {{- end }}
        ports:
        - name: diag
          containerPort: 3000
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: diag
          initialDelaySeconds: 5 # wait 5s for agent to start
          periodSeconds: 5 # poll health every 5s
          failureThreshold: 6 # consider agent unhealthy after 30s (6 * 5s)
          timeoutSeconds: {{ .Values.probeTimeoutSeconds }}
        readinessProbe:
          httpGet:
            path: /readyz
            port: diag
          initialDelaySeconds: 5 # wait 5s for agent to register
          periodSeconds: 5 # poll health every 5s
          failureThreshold: 12 # consider agent unhealthy after 60s (12 * 5s)
          timeoutSeconds: {{ .Values.probeTimeoutSeconds }}
{{- if .Values.postStart.command }}
        lifecycle:
          postStart:
            exec:
              command: {{ toYaml .Values.postStart.command | nindent 14 }}
{{- end }}
{{- if .Values.resources }}
        resources:
  {{- toYaml .Values.resources | nindent 10 }}
{{- end }}
{{- if .Values.securityContext }}
        securityContext: {{- toYaml .Values.securityContext | nindent 10 }}
{{- end }}
        volumeMounts:
{{- if .Values.enterprise }}
        - mountPath: /var/lib/license
          name: "license"
          readOnly: true
{{- end }}
  {{- if and (.Values.gcp.credentialSecretName) (eq .Values.chartMode "gcp") }}
        - mountPath: /etc/teleport-secrets
          name: "gcp-credentials"
          readOnly: true
{{- end }}
{{- if .Values.tls.existingCASecretName }}
        - mountPath: /etc/teleport-tls-ca
          name: "teleport-tls-ca"
          readOnly: true
{{- end }}
        - mountPath: /etc/teleport
          name: "config"
          readOnly: true
        - mountPath: /var/lib/teleport
          name: "data"
{{- if .Values.extraVolumeMounts }}
  {{- toYaml .Values.extraVolumeMounts | nindent 8 }}
{{- end }}
{{ if .Values.operator.enabled }}
      - name: "operator"
        image: '{{ .Values.operator.image }}:{{ include "teleport-cluster.version" . }}'
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
{{- if .Values.operator.resources }}
        resources:
  {{- toYaml .Values.operator.resources | nindent 10 }}
{{- end }}
        volumeMounts:
  {{- if .Values.highAvailability.certManager.enabled }}
        - mountPath: /etc/teleport-tls
          name: "teleport-tls"
          readOnly: true
  {{- else if .Values.tls.existingSecretName }}
        - mountPath: /etc/teleport-tls
          name: "teleport-tls"
          readOnly: true
  {{- end }}
        - mountPath: /etc/teleport
          name: "config"
          readOnly: true
        - mountPath: /var/lib/teleport
          name: "data"
{{ end }}
      volumes:
{{- if .Values.enterprise }}
      - name: license
        secret:
          secretName: "license"
{{- end }}
{{- if (eq .Values.chartMode "gcp") }}
      - name: gcp-credentials
        secret:
          secretName: {{ required "gcp.credentialSecretName is required in chart values" .Values.gcp.credentialSecretName }}
{{- end }}
{{- if .Values.tls.existingCASecretName }}
      - name: teleport-tls-ca
        secret:
          secretName: {{ .Values.tls.existingCASecretName }}
{{- end }}
      - name: "config"
        configMap:
          name: {{ .Release.Name }}-auth
      - name: "data"
        {{- if and (.Values.persistence.enabled) (or (eq .Values.chartMode "standalone") (eq .Values.chartMode "custom")) }}
        persistentVolumeClaim:
          claimName: {{ if $persistence.existingClaimName }}{{ $persistence.existingClaimName }}{{ else }}{{ .Release.Name }}{{ end }}
        {{- else }}
        emptyDir: {}
        {{- end }}
{{- if .Values.extraVolumes }}
  {{- toYaml .Values.extraVolumes | nindent 6 }}
{{- end }}
{{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
{{- end }}
      serviceAccountName: {{ include "teleport-cluster.auth.serviceAccountName" . }}
